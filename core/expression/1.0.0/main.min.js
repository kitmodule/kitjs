(function(global){const kitmodule=global.kitmodule||(global.kitmodule={}),{lexer:kitLexer}=kitmodule;function kitExpression(code){code.startsWith("{")&&code.endsWith("}")&&(code=code.slice(1,-1).trim()),code=code.replace(/,/g,";");const tokens=kitLexer(code),result={};let i=0;function next(){return tokens[i++]}function peek(offset=0){return tokens[i+offset]}function parseKey(){const token=next();if(!token)return null;let key="";if(token.type==="string")return token.quote+token.value+token.quote;if(token.type==="number")return token.value;if(token.type==="identifier"){for(key+=token.value;peek()&&["-","_"].includes(peek().value)&&peek(1)&&peek(1).type==="identifier";)key+=next().value,key+=next().value;if(peek()&&peek().value==="("){let depth=0;for(;peek();){const t=peek();if(key+=t.value,t.value==="("?depth++:t.value===")"&&depth--,next(),depth===0)break}}return key}return null}function parseValue(){if(i>=tokens.length)return"";const startToken=tokens[i];let startIndex=startToken.start,depth=0;for(;i<tokens.length;){const t=peek();if(t.value===";"&&depth===0)break;["(","[","{"].includes(t.value)?depth++:[")","]","}"].includes(t.value)&&depth--,next()}const endToken=tokens[i-1];let endIndex=endToken.end;return code.slice(startIndex,endIndex+1)}for(;i<tokens.length;){const key=parseKey();if(!key)break;const colon=next();if(!colon||colon.value!==":")break;const value=parseValue(),separator=peek();separator&&separator.value===";"&&next(),result[key]=value}return result}kitmodule.expression=kitExpression})(typeof window!="undefined"?window:globalThis)